import React, { useState, useEffect } from 'react';
import {
    View,
    Text,
    StyleSheet,
    TouchableOpacity,
    ScrollView,
    Alert,
} from 'react-native';
import { saveWaterData, getWaterData, getProfile, saveWaterHistory } from '../utils/storage';

export default function WaterScreen() {
    const [current, setCurrent] = useState(0);
    const [goal, setGoal] = useState(2000);
    const [profile, setProfile] = useState(null);

    useEffect(() => {
        loadData();
    }, []);

    const loadData = async () => {
        const waterData = await getWaterData();
        const profileData = await getProfile();

        setCurrent(waterData || 0);
        setProfile(profileData);

        // –†–∞—Å—á–µ—Ç –Ω–æ—Ä–º—ã –≤–æ–¥—ã –ø–æ –≤–µ—Å—É (30-40 –º–ª –Ω–∞ –∫–≥)
        if (profileData && profileData.weight) {
            const calculatedGoal = profileData.weight * 35;
            setGoal(calculatedGoal);
        }
    };

    const addWater = async (amount) => {
        const newAmount = current + amount;
        setCurrent(newAmount);
        await saveWaterData(newAmount);
        await saveWaterHistory(newAmount, goal);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏
        if (current < goal && newAmount >= goal) {
            Alert.alert('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!', '–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –¥–Ω–µ–≤–Ω—É—é –Ω–æ—Ä–º—É –≤–æ–¥—ã!');
        }
    };

    const reset = async () => {
        if (current < goal) {
            Alert.alert(
                'üòî –ù–æ—Ä–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
                `–í—ã –≤—ã–ø–∏–ª–∏ —Ç–æ–ª—å–∫–æ ${Math.round((current / goal) * 100)}% –æ—Ç –Ω–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞!`,
                [
                    { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
                    {
                        text: '–°–±—Ä–æ—Å–∏—Ç—å',
                        onPress: async () => {
                            setCurrent(0);
                            await saveWaterData(0);
                        }
                    }
                ]
            );
        } else {
            setCurrent(0);
            await saveWaterData(0);
        }
    };

    const percentage = Math.min((current / goal) * 100, 150);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const getStatus = () => {
        const percent = (current / goal) * 100;

        if (percent < 50) {
            return {
                color: '#E74C3C',
                message: '‚ö†Ô∏è –ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã!',
                icon: 'üò∞'
            };
        } else if (percent < 100) {
            return {
                color: '#F39C12',
                message: 'üí™ –ü–æ—á—Ç–∏ —É —Ü–µ–ª–∏!',
                icon: 'üòä'
            };
        } else if (percent <= 120) {
            return {
                color: '#27AE60',
                message: '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ù–æ—Ä–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!',
                icon: 'üéâ'
            };
        } else {
            return {
                color: '#E74C3C',
                message: '‚ö†Ô∏è –ù–µ –ø–µ—Ä–µ—É—Å–µ—Ä–¥—Å—Ç–≤—É–π—Ç–µ!',
                icon: 'üòÖ'
            };
        }
    };

    const status = getStatus();

    return (
        <ScrollView style={styles.container}>
            <View style={styles.card}>
                {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
                {profile && profile.name && (
                    <Text style={styles.greeting}>
                        –ü—Ä–∏–≤–µ—Ç, {profile.name}! üëã
                    </Text>
                )}

                <Text style={styles.title}>–í—ã–ø–∏—Ç–æ —Å–µ–≥–æ–¥–Ω—è</Text>

                {/* –°—Ç–∞—Ç—É—Å */}
                <View style={[styles.statusCard, { backgroundColor: status.color + '20' }]}>
                    <Text style={styles.statusIcon}>{status.icon}</Text>
                    <Text style={[styles.statusMessage, { color: status.color }]}>
                        {status.message}
                    </Text>
                </View>

                {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
                <View style={styles.progressContainer}>
                    <View style={styles.progressBar}>
                        <View
                            style={[
                                styles.progressFill,
                                {
                                    width: `${percentage}%`,
                                    backgroundColor: status.color
                                }
                            ]}
                        />
                    </View>
                    <Text style={[styles.progressText, { color: status.color }]}>
                        {current} / {goal} –º–ª ({Math.round((current / goal) * 100)}%)
                    </Text>
                </View>

                {/* –ë–æ–ª—å—à–∞—è –∏–∫–æ–Ω–∫–∞ */}
                <Text style={styles.waterIcon}>üíß</Text>
                <Text style={styles.currentAmount}>{current} –º–ª</Text>

                {/* –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
                <View style={styles.buttonsRow}>
                    <TouchableOpacity
                        style={[styles.waterButton, { backgroundColor: status.color }]}
                        onPress={() => addWater(100)}>
                        <Text style={styles.buttonText}>+100 –º–ª</Text>
                        <Text style={styles.buttonSubtext}>–ü–æ–ª—Å—Ç–∞–∫–∞–Ω–∞</Text>
                    </TouchableOpacity>
                    <TouchableOpacity
                        style={[styles.waterButton, { backgroundColor: status.color }]}
                        onPress={() => addWater(200)}>
                        <Text style={styles.buttonText}>+200 –º–ª</Text>
                        <Text style={styles.buttonSubtext}>–°—Ç–∞–∫–∞–Ω</Text>
                    </TouchableOpacity>
                </View>

                <View style={styles.buttonsRow}>
                    <TouchableOpacity
                        style={[styles.waterButton, { backgroundColor: status.color }]}
                        onPress={() => addWater(250)}>
                        <Text style={styles.buttonText}>+250 –º–ª</Text>
                        <Text style={styles.buttonSubtext}>–ö—Ä—É–∂–∫–∞</Text>
                    </TouchableOpacity>
                    <TouchableOpacity
                        style={[styles.waterButton, { backgroundColor: status.color }]}
                        onPress={() => addWater(500)}>
                        <Text style={styles.buttonText}>+500 –º–ª</Text>
                        <Text style={styles.buttonSubtext}>–ë—É—Ç—ã–ª–∫–∞</Text>
                    </TouchableOpacity>
                </View>

                {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ */}
                <TouchableOpacity
                    style={styles.resetButton}
                    onPress={reset}>
                    <Text style={styles.resetButtonText}>üîÑ –°–±—Ä–æ—Å–∏—Ç—å –¥–µ–Ω—å</Text>
                </TouchableOpacity>
            </View>
        </ScrollView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#F5F5F5',
    },
    card: {
        backgroundColor: 'white',
        margin: 20,
        padding: 20,
        borderRadius: 15,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
        elevation: 3,
    },
    greeting: {
        fontSize: 20,
        fontWeight: '600',
        color: '#4A90E2',
        marginBottom: 10,
        textAlign: 'center',
    },
    title: {
        fontSize: 24,
        fontWeight: 'bold',
        textAlign: 'center',
        marginBottom: 15,
        color: '#333',
    },
    statusCard: {
        padding: 15,
        borderRadius: 10,
        marginBottom: 20,
        alignItems: 'center',
    },
    statusIcon: {
        fontSize: 40,
        marginBottom: 5,
    },
    statusMessage: {
        fontSize: 18,
        fontWeight: 'bold',
    },
    progressContainer: {
        marginBottom: 20,
    },
    progressBar: {
        height: 30,
        backgroundColor: '#E0E0E0',
        borderRadius: 15,
        overflow: 'hidden',
        marginBottom: 10,
    },
    progressFill: {
        height: '100%',
    },
    progressText: {
        textAlign: 'center',
        fontSize: 16,
        fontWeight: '600',
    },
    waterIcon: {
        fontSize: 80,
        textAlign: 'center',
        marginTop: 10,
    },
    currentAmount: {
        fontSize: 32,
        fontWeight: 'bold',
        textAlign: 'center',
        color: '#4A90E2',
        marginBottom: 20,
    },
    buttonsRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        marginBottom: 15,
    },
    waterButton: {
        flex: 1,
        padding: 15,
        borderRadius: 10,
        marginHorizontal: 5,
        alignItems: 'center',
    },
    buttonText: {
        color: 'white',
        fontSize: 18,
        fontWeight: 'bold',
    },
    buttonSubtext: {
        color: 'white',
        fontSize: 12,
        marginTop: 3,
        opacity: 0.9,
    },
    resetButton: {
        backgroundColor: '#95A5A6',
        padding: 15,
        borderRadius: 10,
        marginTop: 10,
    },
    resetButtonText: {
        color: 'white',
        textAlign: 'center',
        fontSize: 16,
        fontWeight: '600',
    },
});
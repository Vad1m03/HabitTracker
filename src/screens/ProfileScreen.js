import React, { useState, useEffect } from 'react';
import {
    View,
    Text,
    StyleSheet,
    TextInput,
    TouchableOpacity,
    ScrollView,
    Alert,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { saveProfile, getProfile } from '../utils/storage';

export default function ProfileScreen() {
    const [name, setName] = useState('');
    const [age, setAge] = useState('');
    const [weight, setWeight] = useState('');
    const [saved, setSaved] = useState(false);

    useEffect(() => {
        loadProfile();
    }, []);

    const loadProfile = async () => {
        const data = await getProfile();
        if (data) {
            setName(data.name || '');
            setAge(data.age?.toString() || '');
            setWeight(data.weight?.toString() || '');
            setSaved(true);
        }
    };

    const handleSave = async () => {
        if (!name.trim()) {
            Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
            return;
        }

        const profile = {
            name: name.trim(),
            age: parseInt(age) || 0,
            weight: parseInt(weight) || 0,
        };

        await saveProfile(profile);
        setSaved(true);
        Alert.alert('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ', '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    };

    const calculateWaterGoal = () => {
        const w = parseInt(weight);
        if (w > 0) {
            return w * 35; // 35 –º–ª –Ω–∞ –∫–≥ –≤–µ—Å–∞
        }
        return 2000;
    };

    return (
        <ScrollView style={styles.container}>
            <View style={styles.card}>
                <Text style={styles.icon}>üë§</Text>
                <Text style={styles.title}>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</Text>

                {/* –ò–º—è */}
                <View style={styles.inputGroup}>
                    <Text style={styles.label}>
                        <Ionicons name="person" size={18} /> –í–∞—à–µ –∏–º—è
                    </Text>
                    <TextInput
                        style={styles.input}
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–∞–¥–∏–º"
                        value={name}
                        onChangeText={setName}
                    />
                </View>

                {/* –í–æ–∑—Ä–∞—Å—Ç */}
                <View style={styles.inputGroup}>
                    <Text style={styles.label}>
                        <Ionicons name="calendar" size={18} /> –í–æ–∑—Ä–∞—Å—Ç
                    </Text>
                    <TextInput
                        style={styles.input}
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 25"
                        value={age}
                        onChangeText={setAge}
                        keyboardType="numeric"
                    />
                </View>

                {/* –í–µ—Å */}
                <View style={styles.inputGroup}>
                    <Text style={styles.label}>
                        <Ionicons name="fitness" size={18} /> –í–µ—Å (–∫–≥)
                    </Text>
                    <TextInput
                        style={styles.input}
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 70"
                        value={weight}
                        onChangeText={setWeight}
                        keyboardType="numeric"
                    />
                    {weight && parseInt(weight) > 0 && (
                        <Text style={styles.hint}>
                            üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –Ω–æ—Ä–º–∞: {calculateWaterGoal()} –º–ª –≤ –¥–µ–Ω—å
                        </Text>
                    )}
                </View>

                {/* –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
                <TouchableOpacity
                    style={styles.saveButton}
                    onPress={handleSave}>
                    <Text style={styles.saveButtonText}>
                        {saved ? '‚úì –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å'}
                    </Text>
                </TouchableOpacity>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                {saved && (
                    <View style={styles.infoCard}>
                        <Text style={styles.infoTitle}>üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Text>
                        <View style={styles.infoRow}>
                            <Text style={styles.infoLabel}>–ò–º—è:</Text>
                            <Text style={styles.infoValue}>{name}</Text>
                        </View>
                        <View style={styles.infoRow}>
                            <Text style={styles.infoLabel}>–í–æ–∑—Ä–∞—Å—Ç:</Text>
                            <Text style={styles.infoValue}>{age || '‚Äî'} –ª–µ—Ç</Text>
                        </View>
                        <View style={styles.infoRow}>
                            <Text style={styles.infoLabel}>–í–µ—Å:</Text>
                            <Text style={styles.infoValue}>{weight || '‚Äî'} –∫–≥</Text>
                        </View>
                        <View style={styles.infoRow}>
                            <Text style={styles.infoLabel}>–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞:</Text>
                            <Text style={styles.infoValue}>{calculateWaterGoal()} –º–ª</Text>
                        </View>
                    </View>
                )}

                {/* –°–æ–≤–µ—Ç—ã */}
                <View style={styles.tipsCard}>
                    <Text style={styles.tipsTitle}>üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã</Text>
                    <Text style={styles.tip}>‚Ä¢ –ü–µ–π—Ç–µ –≤–æ–¥—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è</Text>
                    <Text style={styles.tip}>‚Ä¢ –î–µ—Ä–∂–∏—Ç–µ –±—É—Ç—ã–ª–∫—É –≤–æ–¥—ã –≤—Å–µ–≥–¥–∞ –ø–æ–¥ —Ä—É–∫–æ–π</Text>
                    <Text style={styles.tip}>‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ</Text>
                    <Text style={styles.tip}>‚Ä¢ –ù–æ—Ä–º–∞: 30-40 –º–ª –Ω–∞ 1 –∫–≥ –≤–µ—Å–∞</Text>
                </View>
            </View>
        </ScrollView>
    );
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#F5F5F5',
    },
    card: {
        backgroundColor: 'white',
        margin: 20,
        padding: 20,
        borderRadius: 15,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
        elevation: 3,
    },
    icon: {
        fontSize: 60,
        textAlign: 'center',
        marginBottom: 10,
    },
    title: {
        fontSize: 24,
        fontWeight: 'bold',
        textAlign: 'center',
        marginBottom: 30,
        color: '#333',
    },
    inputGroup: {
        marginBottom: 20,
    },
    label: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
        marginBottom: 8,
    },
    input: {
        backgroundColor: '#F5F5F5',
        padding: 15,
        borderRadius: 10,
        fontSize: 16,
        borderWidth: 1,
        borderColor: '#E0E0E0',
    },
    hint: {
        marginTop: 5,
        fontSize: 14,
        color: '#27AE60',
        fontStyle: 'italic',
    },
    saveButton: {
        backgroundColor: '#4A90E2',
        padding: 18,
        borderRadius: 10,
        marginTop: 10,
    },
    saveButtonText: {
        color: 'white',
        textAlign: 'center',
        fontSize: 18,
        fontWeight: 'bold',
    },
    infoCard: {
        backgroundColor: '#F0F8FF',
        padding: 15,
        borderRadius: 10,
        marginTop: 20,
    },
    infoTitle: {
        fontSize: 18,
        fontWeight: 'bold',
        marginBottom: 15,
        color: '#4A90E2',
    },
    infoRow: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        paddingVertical: 8,
        borderBottomWidth: 1,
        borderBottomColor: '#E0E0E0',
    },
    infoLabel: {
        fontSize: 16,
        color: '#666',
    },
    infoValue: {
        fontSize: 16,
        fontWeight: '600',
        color: '#333',
    },
    tipsCard: {
        backgroundColor: '#FFF9E6',
        padding: 15,
        borderRadius: 10,
        marginTop: 20,
    },
    tipsTitle: {
        fontSize: 16,
        fontWeight: 'bold',
        marginBottom: 10,
        color: '#F39C12',
    },
    tip: {
        fontSize: 14,
        color: '#666',
        marginBottom: 8,
        lineHeight: 20,
    },
});